//// -- LEVEL 1
//// -- Tables and References

// Creating tables
Table study as ST {
  STID int [pk, increment]
  study_name varchar
  project varchar //InRoot, MATRIX, INTERACT
  responsible_PI varchar
  description varchar
}

Table processed_data as PRD {
  PRDID int [pk, increment]
  description varchar
  STID int
  SCPID int //generated using this/these scripts
  PRD_file_path varchar
}


Table scripts as SCP {
  SCPID int [pk, increment]
  description varchar
  STID int
  SEID_input int //Input sequencing data
  PRD_input int //Input processed_data
  PRD_output int //output processed_data
  SCP_github_link varchar 
}




Table collection_site as CS {
  CSID int [pk, increment]
  collection_date date
  latitude float
  longitude float
  elevation integer
  country varchar
  vegetation_type varchar
  forest_status varchar
  canopy_cover varchar
  source_mat_id varchar
  host_scientific_name varchar
  host_common_name varchar
  host_type varchar
  plot_number varchar
  host_body_site varchar
  collected_by varchar
  management_history varchar
  Description varchar
  }


Table plant_germplasm as PG {
  PGID int [pk, increment]
  CSID int
  line_name varchar
  genotype varchar
}

Table seed_lot as SL {
  SLID int [pk, increment]
  PGID int
  harvest_date date
  harvest_location varchar
  storage_location varchar
  aarhus_seedbag_ID integer
}

Table strain_germplasm as SG {
  SGID int [pk, increment]
  CSID int
  growth_medium text
  growth_temperature text
  antibiotic_resistance text
  genetic_modification text
  genus text
  species text
  strain text
  additional_name text
  genotype text
  CeMiSt_Plasmid_ID text
  plasmid text
  ABM text
  isolated_from text
  isolated_by text
  date date
  project_code varchar
  collection_number int
  created_by text
  storage_location varchar //Builing, Room, Freezer, Shelf
  storage_temperature int
  responsible_PI text
  notes text
}

Table syncom as SC {
  SCID int [pk, increment]
  list_of_SGIDs varchar
  OD600_of_SGIDs varchar
  responsible_PI varchar
  storage_location varchar
}

Table microbial_community as MC {
  MCID int [pk, increment]
  CSID int
  description text
}


Table sample as SA {
  SAID int [pk, increment]
  STID int
  SLID int
  SGID int
  SCID int
  MCID int
  FPID int
  EPID int //list of EPIDs
  OSID int
  plant_tissue varchar
  Compartment varchar
  start_date_time date
  end_date_time date
}

Table seq_experiment as SE {
  SEID int [pk, increment]
  SAID int
  SRID int
  raw_data_file text
  SRA_ID varchar //once assigned by SRA 
}

Table seq_run as SR {
  SRID int [pk, increment]
  SEID int
  technology text
  read_length float
  pairing text
  chemistry text
  machine text
  run_date date
  service_provider text
  responsible_PI text
}

Table experimental_protocol as EP {
  EPID int [pk, increment]
  step_by_step_protocol varchar //link to pdf
  protocol_type varchar //setup, growth conditions, harvesting, DNA extraction, library prep 
  description varchar
  created_by varchar
  date_entered date
  responsible_pi varchar
}



Table field_trail as FT {
  FTID int [pk, increment]
  STID int
  latitude float
  longitude float
  plot_size varchar
  soiltype varchar
  start_of_trial date
  end_of_trial date
  description varchar
  trial_manager varchar
  comments varchar
  }

Table field_plot as FP {
  FPID int [pk, increment]
  FTID int
  SLID int
  latitude float
  longitude float
  description text
  comments  text
  }

Table field_climate as FC {
  FCID int [pk, increment]
  FTID int
  date_registrered date
  degrees_celcius float
  humidity_percent float
  precipication_mm float
  sunlight_hours float
  drought_index float
  comments text
  }

Table field_management as FM {
  FMID int [pk, increment]
  FTID int
  treatment text
  composition varchar
  concentration varchar
  dosage varchar
  date date
  comments text
  }

Table phenotype as PH {
  PHID int [pk, increment]
  PDID int
  FPID int
  SAID int
  date_registrered date
  phenotype_value float
  phenotype_file text
  entered_by text
  comments text
  }

Table phenotype_description as PD {
  PDID int [pk, increment]
  EPID int
  phenotype_description text
  comments text
  }




// Creating references
// You can also define relaionship separately
// > many-to-one; < one-to-many; - one-to-one
Ref: PG.PGID < SL.PGID 
Ref: SL.SLID < SA.SLID
Ref: ST.STID < SA.STID
Ref: SG.SGID < SA.SGID
Ref: SC.SCID < SA.SCID
Ref: MC.MCID < SA.MCID
Ref: EP.EPID < SA.EPID
Ref: SE.SAID > SA.SAID
Ref: SE.SEID < SR.SEID
Ref: SR.SRID < SE.SRID
Ref: ST.STID < FT.STID
Ref: SL.SLID < FP.SLID
Ref: FT.FTID < FP.FTID
Ref: FT.FTID < FC.FTID
Ref: FT.FTID < FM.FTID
Ref: SA.SAID < PH.SAID
Ref: PD.PDID < PH.PDID
Ref: CS.CSID < PG.CSID
Ref: CS.CSID < SG.CSID
Ref: CS.CSID < MC.CSID
Ref: FP.FPID < SA.FPID
Ref: FP.FPID < PH.FPID
Ref: ST.STID < PRD.STID
Ref: PRD.SCPID < SCP.SCPID
Ref: ST.STID < SCP.STID
Ref: SCP.PRD_input < PRD.PRDID
Ref: SCP.PRD_output < PRD.PRDID
Ref: SCP.SEID_input < SE.SEID

//----------------------------------------------//

//// -- LEVEL 2
//// -- Adding column settings

//Table order_items {
//  order_id int [ref: > orders.id]
//  product_id int    
//  quantity int [default: 1] // default value
//}

//Ref: order_items.product_id > products.id
//
//Table orders {
//  id int [pk] // primary key
//  user_id int [not null, unique]
//  status varchar
//  created_at varchar [note: 'When order created'] // add column note
//}

//----------------------------------------------//

//// -- Level 3 
//// -- Enum, Indexes

// Enum for 'products' table below
//Enum products_status {
//  out_of_stock
//  in_stock
//  running_low [note: 'less than 20'] // add column note
//}

// Indexes: You can define a single or multi-column index 
//Table products {
//  id int [pk]
//  name varchar
//  merchant_id int [not null]
//  price int
//  status products_status
//  created_at datetime [default: `now()`]
//  
//  Indexes {
//    (merchant_id, status) [name:'product_status']
//    id [unique]
//  }
//}

//Ref: products.merchant_id > merchants.id // many-to-one


